name: Deploy

on:
  workflow_dispatch:
    inputs:
      level:
        description: 'Semantic Version Level (major, minor, patch)'
        required: true
        default: 'patch'

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_VERSION: 2022.3.13f1
  PROJECT_PATH: Test
  PROJECT_NAME: Test

jobs:
  bump-semver:
    name: Bump Semantic Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump-semver.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Latest Tag
        id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        if: ${{ github.event.inputs.level != null }}

      - name: Bump Semantic Version
        id: bump-semver
        uses: actions-ecosystem/action-bump-semver@v1
        if: ${{ steps.get-latest-tag.outputs.tag != '' }}
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ github.event.inputs.level }}

      - name: Display New Version
        run: |
          echo "New version: ${{ steps.bump-semver.outputs.new_version }}"

      - name: Push New Tag
        uses: actions-ecosystem/action-push-tag@v1
        if: ${{ steps.bump-semver.outputs.new_version != null }}
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: 'Release ${{ steps.bump-semver.outputs.new_version }}'

  check-license:
    name: Check for Unity License
    runs-on: ubuntu-latest
    steps:
      - name: Fail build if no unity license set
        if: ${{ env.UNITY_LICENSE == '' }}
        uses: actions/github-script@v7
        with:
          script: |
              core.setFailed('No unity license secret set')

  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    needs: [bump-semver, check-license]
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows
          - StandaloneWindows64
          - StandaloneLinux64
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Cache files
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: Library-${{ env.PROJECT_PATH }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ env.PROJECT_PATH }}-
            Library-

      - name: Build
        uses: game-ci/unity-builder@v4.2.3
        with:
          buildName: ${{ env.PROJECT_NAME }}
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Custom
          version: ${{ needs.bump-semver.outputs.version }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.3.1
        with:
          name: Build
          path: build

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build, bump-semver]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4.1.4
        with:
          name: Build
          path: build

      - name: Display structure of uploaded builds
        run: ls build

      - name: Zip artifacts
        run: |
          cd build
          for file in $(ls -I "*.zip"); do zip -r "${file}.zip" "$file"; done

      - name: Create Changelog
        id: changelog
        uses: loopwerk/tag-changelog@v1.3.0
        if: ${{ needs.bump-semver.outputs.version != null }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,doc,chore
          config_file: .github/changelog-config.js

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.bump-semver.outputs.version }}
          name: Release ${{ needs.bump-semver.outputs.version }}
          body: ${{ steps.changelog.outputs.changes }}
          files: build/*.zip
